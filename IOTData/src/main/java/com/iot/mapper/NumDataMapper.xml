<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iot.dao.NumDataMapper">
    <resultMap id="BaseResultMap" type="com.iot.model.NumData">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="value" property="value" jdbcType="DOUBLE"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="sensorId" property="sensorId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, value, createTime, updateTime, sensorId
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from numdata
    where id = #{id,jdbcType=INTEGER}
</select>
    <select id="queryNumDataBySensorId" resultMap="BaseResultMap" parameterType="com.iot.model.acceptParam.DataConditionParam">
        select
        <include refid="Base_Column_List"/>
        from numdata
        where sensorId = #{sensorId,jdbcType=INTEGER} and createTime between #{startTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}
        order by id DESC
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from numdata
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteNumDatas" parameterType="java.lang.Integer">
    delete from numdata
    where id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
  </delete>

    <insert id="insert" parameterType="com.iot.model.NumData">
    insert into numdata (id, value, createTime, 
      updateTime, sensorId)
    values (#{id,jdbcType=INTEGER}, #{value,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sensorId,jdbcType=INTEGER})
  </insert>
    <insert id="insertNumDatas" parameterType="java.util.Map">
     insert into numdata(value,sensorId) values
        <foreach collection="values" item="item" index="index" separator=",">
            (#{item},#{sensorId})
        </foreach>
  </insert>
    <insert id="insertSelective" parameterType="com.iot.model.NumData">
        insert into numdata
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="value != null">
                value,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="sensorId != null">
                sensorId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="value != null">
                #{value,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sensorId != null">
                #{sensorId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.iot.model.NumData">
        update numdata
        <set>
            <if test="value != null">
                value = #{value,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sensorId != null">
                sensorId = #{sensorId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iot.model.NumData">
    update numdata
    set value = #{value,jdbcType=DOUBLE},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      sensorId = #{sensorId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
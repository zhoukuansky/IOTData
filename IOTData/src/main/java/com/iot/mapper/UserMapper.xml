<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iot.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.iot.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="tel" property="tel" jdbcType="CHAR"/>
        <result column="password" property="password" jdbcType="CHAR"/>
        <result column="name" property="name" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="CHAR"/>
        <result column="address" property="address" jdbcType="CHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="role" property="role" jdbcType="CHAR"/>
        <result column="apiKey" property="apiKey" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, tel, password, name, email, address, createTime, updateTime, role,apiKey
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="queryAllUser_Admin" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        *
        from user
    </select>
    <select id="selectByEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email,jdbcType=CHAR}
    </select>
    <select id="selectByTel" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where tel = #{tel,jdbcType=CHAR}
    </select>
    <select id="login" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email,jdbcType=VARCHAR} and password = md5(#{password,jdbcType=VARCHAR})
    </select>
    <select id="verifyPassword" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=VARCHAR} and password = md5(#{password,jdbcType=VARCHAR})
    </select>
    <select id="verifyApiKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where apiKey = #{apiKey,jdbcType=VARCHAR}
    </select>
    <select id="queryApiKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select *
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteUser_Admin" parameterType="java.lang.Integer">
        delete from user where 1>2
        or id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" parameterType="java.util.Map">
    insert into user (email, password, role, apiKey)
    values ( #{email,jdbcType=CHAR}, md5(#{password,jdbcType=VARCHAR}), #{role,jdbcType=CHAR}, #{apiKey,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.iot.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="role != null">
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=CHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=CHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIME},
            </if>
            <if test="role != null">
                #{role,jdbcType=CHAR},
            </if>
        </trim>
    </insert>

    <update id="updatePassword" parameterType="java.util.Map">
    update user
    set password = md5(#{password,jdbcType=VARCHAR})
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.iot.model.User">
        update user
        <set>
            <if test="tel != null">
                tel = #{tel,jdbcType=CHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=CHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iot.model.User">
    update user
    set tel = #{tel,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIME},
      role = #{role,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateApiKey" parameterType="java.util.Map">
    update user
    set apiKey = #{apiKey,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>